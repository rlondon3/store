{
  "stats": {
    "suites": 17,
    "tests": 54,
    "passes": 54,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-29T16:40:19.189Z",
    "end": "2023-03-29T16:40:19.359Z",
    "duration": 170,
    "testsRegistered": 54,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5ea3bf9b-bc71-4171-84a0-76982d97b5ec",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c89e2a23-b40f-4e31-8f3f-38f8719678d6",
          "title": "Order Model",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\order-test.js",
          "file": "\\src\\models\\test\\order-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have defined model",
              "fullTitle": "Order Model should have defined model",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Order).to.exist;",
              "err": {},
              "uuid": "0072d895-500e-4813-afa0-62659c2d671a",
              "parentUUID": "c89e2a23-b40f-4e31-8f3f-38f8719678d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0072d895-500e-4813-afa0-62659c2d671a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "526caaf4-e18a-49ef-b94a-dae03807f791",
          "title": "Order Schema",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\order-test.js",
          "file": "\\src\\models\\test\\order-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Order Schema should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(order_schema).to.exist;",
              "err": {},
              "uuid": "26143fd6-2b36-4202-87d3-8a339d924198",
              "parentUUID": "526caaf4-e18a-49ef-b94a-dae03807f791",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a user id key",
              "fullTitle": "Order Schema should have a user id key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(order_schema.obj)\n.which.is.an('object')\n.and.has.property('user_id')",
              "err": {},
              "uuid": "2074c34b-d578-4102-90a0-41919090322e",
              "parentUUID": "526caaf4-e18a-49ef-b94a-dae03807f791",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have an order status key",
              "fullTitle": "Order Schema should have an order status key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(order_schema.obj)\n.which.is.an('object')\n.and.has.property('order_status')",
              "err": {},
              "uuid": "0ab80fa7-6c47-4d6b-834b-da93d5ebddab",
              "parentUUID": "526caaf4-e18a-49ef-b94a-dae03807f791",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26143fd6-2b36-4202-87d3-8a339d924198",
            "2074c34b-d578-4102-90a0-41919090322e",
            "0ab80fa7-6c47-4d6b-834b-da93d5ebddab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "517ecb70-d302-4a9f-b39c-08c10fb61498",
          "title": "Product Ordered Model",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product_ordered-test.js",
          "file": "\\src\\models\\test\\product_ordered-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have a defined model",
              "fullTitle": "Product Ordered Model should have a defined model",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Product_Ordered).to.exist;",
              "err": {},
              "uuid": "7f16861e-c9a0-4d3e-9e3a-08068ee1828d",
              "parentUUID": "517ecb70-d302-4a9f-b39c-08c10fb61498",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f16861e-c9a0-4d3e-9e3a-08068ee1828d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d3b3f71-1d75-48d9-8b25-3413e61a5463",
          "title": "Product Ordered Schema",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product_ordered-test.js",
          "file": "\\src\\models\\test\\product_ordered-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Product Ordered Schema should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema).to.exist;",
              "err": {},
              "uuid": "6c80eb1d-4d8d-486e-9414-cbb754e70033",
              "parentUUID": "6d3b3f71-1d75-48d9-8b25-3413e61a5463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a quantity key",
              "fullTitle": "Product Ordered Schema should have a quantity key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema.obj)\n.which.is.an('object')\n.and.has.property('quantity');",
              "err": {},
              "uuid": "e2b16498-af29-40a3-8ad3-704fa9a22522",
              "parentUUID": "6d3b3f71-1d75-48d9-8b25-3413e61a5463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a product id key",
              "fullTitle": "Product Ordered Schema should have a product id key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema.obj)\n.which.is.an('object')\n.and.has.property('product_id');",
              "err": {},
              "uuid": "7154b2b8-1927-4213-9fa9-ceafca44b695",
              "parentUUID": "6d3b3f71-1d75-48d9-8b25-3413e61a5463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have an order id key",
              "fullTitle": "Product Ordered Schema should have an order id key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema.obj)\n.which.is.an('object')\n.and.has.property('order_id');",
              "err": {},
              "uuid": "1758dab1-4fec-4c2a-8746-d0b43bf2faed",
              "parentUUID": "6d3b3f71-1d75-48d9-8b25-3413e61a5463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c80eb1d-4d8d-486e-9414-cbb754e70033",
            "e2b16498-af29-40a3-8ad3-704fa9a22522",
            "7154b2b8-1927-4213-9fa9-ceafca44b695",
            "1758dab1-4fec-4c2a-8746-d0b43bf2faed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b723e3e-f7b9-4c05-b2ec-65b997b549d6",
          "title": "Test Product Ordered",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product_ordered-test.js",
          "file": "\\src\\models\\test\\product_ordered-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should hvae a value for id",
              "fullTitle": "Test Product Ordered should hvae a value for id",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(prod_ordered)\n.which.is.an('object')\n.and.has.property('_id')\n.and.not.equal('undefined');",
              "err": {},
              "uuid": "94059fe8-1a13-4db9-9bbb-6dd93d0bb340",
              "parentUUID": "5b723e3e-f7b9-4c05-b2ec-65b997b549d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for quantity",
              "fullTitle": "Test Product Ordered should have a value for quantity",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_prod_ordered)\n.which.is.an('object')\n.and.has.property('quantity')\n.and.equal(10);",
              "err": {},
              "uuid": "90ee52e5-9113-4b9a-b8f5-8d16257bdea1",
              "parentUUID": "5b723e3e-f7b9-4c05-b2ec-65b997b549d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for order_id from order",
              "fullTitle": "Test Product Ordered should have a value for order_id from order",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_prod_ordered)\n.which.is.an('object')\n.and.has.property('order_id')\n.and.equal(order._id);",
              "err": {},
              "uuid": "fec59c08-bd68-4a49-aa03-88650e071da1",
              "parentUUID": "5b723e3e-f7b9-4c05-b2ec-65b997b549d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for product_id from product",
              "fullTitle": "Test Product Ordered should have a value for product_id from product",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_prod_ordered)\n.which.is.an('object')\n.and.has.property('product_id')\n.and.equal(product._id);",
              "err": {},
              "uuid": "e414ac9f-867c-4853-9b8c-e1816ceb9b9e",
              "parentUUID": "5b723e3e-f7b9-4c05-b2ec-65b997b549d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94059fe8-1a13-4db9-9bbb-6dd93d0bb340",
            "90ee52e5-9113-4b9a-b8f5-8d16257bdea1",
            "fec59c08-bd68-4a49-aa03-88650e071da1",
            "e414ac9f-867c-4853-9b8c-e1816ceb9b9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e224ffc-8b45-4e8d-a119-5e00de34a75a",
          "title": "Validate Product Ordered Method",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product_ordered-test.js",
          "file": "\\src\\models\\test\\product_ordered-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should pass test product ordered with correct schema requirements",
              "fullTitle": "Validate Product Ordered Method should pass test product ordered with correct schema requirements",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = handleProductOrderedErrors(test_prod_ordered);\nexpect(result.error).to.equal(undefined);",
              "err": {},
              "uuid": "d0dd0e8c-3b5a-41b0-98ec-964f00512d27",
              "parentUUID": "2e224ffc-8b45-4e8d-a119-5e00de34a75a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail a test product ordered with incorrect schema requirements",
              "fullTitle": "Validate Product Ordered Method should fail a test product ordered with incorrect schema requirements",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_prod_ordered.quantity = \"1\";\nconst result = handleProductOrderedErrors(test_prod_ordered);\nassert.rejects(() => {\n    console.error(result.error.details[0].message);\n}, (err) => err === result.error.details[0].message)",
              "err": {},
              "uuid": "6631ebf1-3c5e-4d74-a96c-d50e29c45a01",
              "parentUUID": "2e224ffc-8b45-4e8d-a119-5e00de34a75a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0dd0e8c-3b5a-41b0-98ec-964f00512d27",
            "6631ebf1-3c5e-4d74-a96c-d50e29c45a01"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "efecb511-62f0-447a-b820-0cea8d2776c2",
          "title": "Product Model",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product-test.js",
          "file": "\\src\\models\\test\\product-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have a defined product model",
              "fullTitle": "Product Model should have a defined product model",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Product).to.exist;",
              "err": {},
              "uuid": "86091940-7b20-4826-ba95-090f87f6a86e",
              "parentUUID": "efecb511-62f0-447a-b820-0cea8d2776c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86091940-7b20-4826-ba95-090f87f6a86e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c7c48a5-a9fa-4866-b8b5-b100a6bc9c86",
          "title": "Product Schema",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product-test.js",
          "file": "\\src\\models\\test\\product-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Product Schema should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema).to.exist;;",
              "err": {},
              "uuid": "d291ff77-66d9-44f0-ba89-fd3eefc70fd9",
              "parentUUID": "2c7c48a5-a9fa-4866-b8b5-b100a6bc9c86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a title key",
              "fullTitle": "Product Schema should have a title key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema.obj)\n.which.is.an('object')\n.and.has.property('title');",
              "err": {},
              "uuid": "92da7d5b-e10e-42ae-8c1f-c34267b22457",
              "parentUUID": "2c7c48a5-a9fa-4866-b8b5-b100a6bc9c86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a description key",
              "fullTitle": "Product Schema should have a description key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema.obj)\n.which.is.an('object')\n.and.has.property('description');",
              "err": {},
              "uuid": "d20ea1f8-8177-403d-89d5-2c44fa985f3f",
              "parentUUID": "2c7c48a5-a9fa-4866-b8b5-b100a6bc9c86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a price key",
              "fullTitle": "Product Schema should have a price key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema.obj)\n.which.is.an('object')\n.and.has.property('price');",
              "err": {},
              "uuid": "41435d21-f762-4340-842d-91c7501e5823",
              "parentUUID": "2c7c48a5-a9fa-4866-b8b5-b100a6bc9c86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d291ff77-66d9-44f0-ba89-fd3eefc70fd9",
            "92da7d5b-e10e-42ae-8c1f-c34267b22457",
            "d20ea1f8-8177-403d-89d5-2c44fa985f3f",
            "41435d21-f762-4340-842d-91c7501e5823"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "140a1750-3d9b-4da8-8c05-00cd0b142095",
          "title": "Test Product",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product-test.js",
          "file": "\\src\\models\\test\\product-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have an id",
              "fullTitle": "Test Product should have an id",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product)\n.which.is.an('object')\n.and.has.property('_id')\n.and.not.equal('undefined');",
              "err": {},
              "uuid": "221a8689-02cc-43fa-b9fd-bf2ff3260a87",
              "parentUUID": "140a1750-3d9b-4da8-8c05-00cd0b142095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for title",
              "fullTitle": "Test Product should have a value for title",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_product)\n.which.is.an('object')\n.and.has.property('title')\n.and.equal('test product');",
              "err": {},
              "uuid": "fbf786a8-7d19-43d1-a924-a958b76065e5",
              "parentUUID": "140a1750-3d9b-4da8-8c05-00cd0b142095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for description",
              "fullTitle": "Test Product should have a value for description",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_product)\n.which.is.an('object')\n.and.has.property('description')\n.and.equal('I am a test product for the store backend');",
              "err": {},
              "uuid": "0c9c53f4-449d-47de-bc14-b6359cd505c0",
              "parentUUID": "140a1750-3d9b-4da8-8c05-00cd0b142095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for price",
              "fullTitle": "Test Product should have a value for price",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_product)\n.which.is.an('object')\n.and.has.property('price')\n.and.equal(109.99);",
              "err": {},
              "uuid": "65038dcf-9b65-4646-9353-0ec03c30c4f0",
              "parentUUID": "140a1750-3d9b-4da8-8c05-00cd0b142095",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "221a8689-02cc-43fa-b9fd-bf2ff3260a87",
            "fbf786a8-7d19-43d1-a924-a958b76065e5",
            "0c9c53f4-449d-47de-bc14-b6359cd505c0",
            "65038dcf-9b65-4646-9353-0ec03c30c4f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68c24fb1-c961-44a1-9645-4cef83ae69be",
          "title": "Validate Product Method",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product-test.js",
          "file": "\\src\\models\\test\\product-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should pass test product with correct schema requirements",
              "fullTitle": "Validate Product Method should pass test product with correct schema requirements",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = handleProductErrors(test_product);\nexpect(result.error).to.equal(undefined);",
              "err": {},
              "uuid": "1a74dcb1-9923-485e-96d2-46d1f0149400",
              "parentUUID": "68c24fb1-c961-44a1-9645-4cef83ae69be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail a test product with incorrect schema requirements",
              "fullTitle": "Validate Product Method should fail a test product with incorrect schema requirements",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_product.price = \"109.99\";\nconst result = handleProductErrors(test_product);\nassert.rejects(() => {\n    const result = handleProductErrors(test_product);\n}, (err) => err === result.error.details[0].message)",
              "err": {},
              "uuid": "aade9b7c-6a8e-404d-b314-56645f9fde77",
              "parentUUID": "68c24fb1-c961-44a1-9645-4cef83ae69be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a74dcb1-9923-485e-96d2-46d1f0149400",
            "aade9b7c-6a8e-404d-b314-56645f9fde77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6ff738d7-edf7-4618-80ff-6e7e65dd3a79",
          "title": "User Model",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\user-test.js",
          "file": "\\src\\models\\test\\user-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have a defined model",
              "fullTitle": "User Model should have a defined model",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(User).to.exist;",
              "err": {},
              "uuid": "926e8364-d441-4cf8-b5df-792740410d3a",
              "parentUUID": "6ff738d7-edf7-4618-80ff-6e7e65dd3a79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "926e8364-d441-4cf8-b5df-792740410d3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
          "title": "User Schema",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\user-test.js",
          "file": "\\src\\models\\test\\user-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "User Schema should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema).to.exist;",
              "err": {},
              "uuid": "c74c05d4-0b21-438d-80da-933b5f9a0218",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a first name key",
              "fullTitle": "User Schema should have a first name key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('first_name');",
              "err": {},
              "uuid": "590ebbb5-e5ac-4232-b965-ec49fc3c9270",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a last name key",
              "fullTitle": "User Schema should have a last name key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('last_name');",
              "err": {},
              "uuid": "48c3de1b-7579-4208-a44d-0d411f766ac4",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have an address key",
              "fullTitle": "User Schema should have an address key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('address');",
              "err": {},
              "uuid": "4b575f89-a325-4c20-98bd-c88a0f216d3b",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a city key",
              "fullTitle": "User Schema should have a city key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('city');",
              "err": {},
              "uuid": "b2e47aa9-283c-4b57-8f2a-15e89757ee3b",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a state key",
              "fullTitle": "User Schema should have a state key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('state');",
              "err": {},
              "uuid": "4c213528-f7f1-4998-98b8-526fb1b5984d",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have zip code key",
              "fullTitle": "User Schema should have zip code key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('zip');",
              "err": {},
              "uuid": "68eb4075-52a6-4b2f-8a35-86cbaa3b299a",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a username key",
              "fullTitle": "User Schema should have a username key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('username');",
              "err": {},
              "uuid": "c983b3c0-3ce1-437c-a093-401e6e8a6f61",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have an email key",
              "fullTitle": "User Schema should have an email key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('email');",
              "err": {},
              "uuid": "6be47442-d331-4019-b593-922149765df0",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a password key",
              "fullTitle": "User Schema should have a password key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user_schema.obj)\n.which.is.an('object')\n.and.has.property('password');",
              "err": {},
              "uuid": "441eff9c-68c7-41c0-b400-b9e437a19bca",
              "parentUUID": "6b0902eb-4f10-40a3-94d9-e39957db34b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c74c05d4-0b21-438d-80da-933b5f9a0218",
            "590ebbb5-e5ac-4232-b965-ec49fc3c9270",
            "48c3de1b-7579-4208-a44d-0d411f766ac4",
            "4b575f89-a325-4c20-98bd-c88a0f216d3b",
            "b2e47aa9-283c-4b57-8f2a-15e89757ee3b",
            "4c213528-f7f1-4998-98b8-526fb1b5984d",
            "68eb4075-52a6-4b2f-8a35-86cbaa3b299a",
            "c983b3c0-3ce1-437c-a093-401e6e8a6f61",
            "6be47442-d331-4019-b593-922149765df0",
            "441eff9c-68c7-41c0-b400-b9e437a19bca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ffda92b6-f732-4a10-b383-96b53ae6f036",
          "title": "Test User",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\user-test.js",
          "file": "\\src\\models\\test\\user-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have a value for id",
              "fullTitle": "Test User should have a value for id",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(user)\n.which.is.an('object')\n.and.has.property('_id')\n.and.not.equal('undefined');",
              "err": {},
              "uuid": "a0b13171-30c5-4210-a582-d248cae5ed54",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value first name",
              "fullTitle": "Test User should have a value first name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('first_name')\n.and.equal('Ralphie');",
              "err": {},
              "uuid": "c777d15e-8475-407d-ab04-16ec26f15d4f",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for last name",
              "fullTitle": "Test User should have a value for last name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('last_name')\n.and.equal('London');",
              "err": {},
              "uuid": "2556dd00-5abf-4ddd-a4cf-af6b90a20aa8",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for address",
              "fullTitle": "Test User should have a value for address",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('address')\n.and.equal('3131 Trap Ave');",
              "err": {},
              "uuid": "28bc07c3-237d-4271-b49b-929b88c14d1c",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for city",
              "fullTitle": "Test User should have a value for city",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('city')\n.and.equal('Atlanta');",
              "err": {},
              "uuid": "5940a5ea-2430-4d17-9cda-f57f1da2825f",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for state",
              "fullTitle": "Test User should have a value for state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('state')\n.and.equal('GA');",
              "err": {},
              "uuid": "888524ae-5743-43d3-9bfe-63b40d11eeb3",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value zip code",
              "fullTitle": "Test User should have a value zip code",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('zip')\n.and.equal(30032);",
              "err": {},
              "uuid": "92823716-f071-4414-9511-35c6d8b1ccac",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for email",
              "fullTitle": "Test User should have a value for email",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('email')\n.and.equal('ralphieLondon@store.com');",
              "err": {},
              "uuid": "8dc4aaba-4eb6-4aec-b196-f92726fb69f5",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for password",
              "fullTitle": "Test User should have a value for password",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('password')\n.and.equal('Store1234!');",
              "err": {},
              "uuid": "cde77cca-a7f6-440d-95be-66f173db100f",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a value for username",
              "fullTitle": "Test User should have a value for username",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(test_user)\n.which.is.an('object')\n.and.has.property('username')\n.and.equal('BossDev');",
              "err": {},
              "uuid": "92d92c25-7aae-4c19-9e1e-04d04987d27e",
              "parentUUID": "ffda92b6-f732-4a10-b383-96b53ae6f036",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0b13171-30c5-4210-a582-d248cae5ed54",
            "c777d15e-8475-407d-ab04-16ec26f15d4f",
            "2556dd00-5abf-4ddd-a4cf-af6b90a20aa8",
            "28bc07c3-237d-4271-b49b-929b88c14d1c",
            "5940a5ea-2430-4d17-9cda-f57f1da2825f",
            "888524ae-5743-43d3-9bfe-63b40d11eeb3",
            "92823716-f071-4414-9511-35c6d8b1ccac",
            "8dc4aaba-4eb6-4aec-b196-f92726fb69f5",
            "cde77cca-a7f6-440d-95be-66f173db100f",
            "92d92c25-7aae-4c19-9e1e-04d04987d27e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f611541b-d6d0-44fc-aa75-ebf67f82e68a",
          "title": "Validate User Method",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\user-test.js",
          "file": "\\src\\models\\test\\user-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should pass test user with correct schema requirements",
              "fullTitle": "Validate User Method should pass test user with correct schema requirements",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = handleUserErrors(test_user);\nexpect(result.error).to.equal(undefined);",
              "err": {},
              "uuid": "0ad62f03-f61b-436e-a9d1-48f3c40f2801",
              "parentUUID": "f611541b-d6d0-44fc-aa75-ebf67f82e68a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail a user with incorrect schema requirements",
              "fullTitle": "Validate User Method should fail a user with incorrect schema requirements",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_user.password = \"1\";\nconst result = handleUserErrors(test_user);\nassert.rejects(() => {\n    const result = handleUserErrors(test_user);\n}, (err) => err === result.error.details[0].message)",
              "err": {},
              "uuid": "cdf6b928-a854-410e-8178-caa9d5f63078",
              "parentUUID": "f611541b-d6d0-44fc-aa75-ebf67f82e68a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ad62f03-f61b-436e-a9d1-48f3c40f2801",
            "cdf6b928-a854-410e-8178-caa9d5f63078"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3c9e9f3-20b3-4e3c-8574-ea860f418e7d",
          "title": "Mongoose",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\server-test.js",
          "file": "\\test\\server-test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: create connection in \"Mongoose\"",
              "fullTitle": "Mongoose \"before all\" hook: create connection in \"Mongoose\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "conn_dev  = await mongoose.createConnection(mongo_test_uri).asPromise();\nconn_test = await mongoose.createConnection(mongo_dev_uri).asPromise();\nassert.rejects(async () => {\n    conn_invalid = await mongoose.createConnection(mongo_invalid_uri).asPromise();\n}, (err) => err === 'Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\"');\nreturn;",
              "err": {},
              "uuid": "2ab5d957-f87a-470d-851c-42b45e148df3",
              "parentUUID": "f3c9e9f3-20b3-4e3c-8574-ea860f418e7d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "shouldnt connect to DB with incorrect prefix",
              "fullTitle": "Mongoose shouldnt connect to DB with incorrect prefix",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let conn_invalid = mongoose.createConnection(mongo_invalid_uri);\nconst ready = conn_invalid.readyState;\nassert.equal(ready, 0);\ndone();",
              "err": {},
              "uuid": "3b0d1c20-8704-400c-9869-92e9249e3634",
              "parentUUID": "f3c9e9f3-20b3-4e3c-8574-ea860f418e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should connect to Spec Test DB",
              "fullTitle": "Mongoose should connect to Spec Test DB",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ready = conn_test.readyState;\n\nassert.equal(ready, 1);\ndone();",
              "err": {},
              "uuid": "b9031615-c0be-4240-b3be-f8941eae9b3c",
              "parentUUID": "f3c9e9f3-20b3-4e3c-8574-ea860f418e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should connect to Dev DB",
              "fullTitle": "Mongoose should connect to Dev DB",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ready = conn_dev.readyState;\n\nassert.equal(ready, 1);\ndone();",
              "err": {},
              "uuid": "bed47a55-1a1d-47cc-9198-b3b6ad8a9529",
              "parentUUID": "f3c9e9f3-20b3-4e3c-8574-ea860f418e7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b0d1c20-8704-400c-9869-92e9249e3634",
            "b9031615-c0be-4240-b3be-f8941eae9b3c",
            "bed47a55-1a1d-47cc-9198-b3b6ad8a9529"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae65109b-9e18-49e3-8abb-f935b698d771",
          "title": "Port Definition",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\server-test.js",
          "file": "\\test\\server-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Port Definition should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(port).to.exist;\ndone();",
              "err": {},
              "uuid": "39423f04-b492-4b85-8285-3d358aece135",
              "parentUUID": "ae65109b-9e18-49e3-8abb-f935b698d771",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39423f04-b492-4b85-8285-3d358aece135"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "034bf248-577f-4fc8-ad0b-e44a08e613e5",
          "title": "Express",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\server-test.js",
          "file": "\\test\\server-test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Express\"",
              "fullTitle": "Express \"before all\" hook in \"Express\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();\nserver.listen(port, () => {\n    console.log(`spec test server should open on port ${port}`);\n    done();\n});",
              "err": {},
              "uuid": "38e9bcf5-4152-4e9a-9a2f-a6ac0722ea44",
              "parentUUID": "034bf248-577f-4fc8-ad0b-e44a08e613e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Express\"",
              "fullTitle": "Express \"after all\" hook in \"Express\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();\nconsole.log(`spec test server should close on port ${port}`);",
              "err": {},
              "uuid": "d1f232de-8fbd-4659-8c52-359180f9d814",
              "parentUUID": "034bf248-577f-4fc8-ad0b-e44a08e613e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "spec test server should connect with status 200",
              "fullTitle": "Express spec test server should connect with status 200",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return await request.get('/', (req, res) => {\n    expect(res.status).to.equal(200);\n});",
              "err": {},
              "uuid": "60098c88-89d7-4c47-89f0-02fbfec71ec4",
              "parentUUID": "034bf248-577f-4fc8-ad0b-e44a08e613e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60098c88-89d7-4c47-89f0-02fbfec71ec4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}
{
  "stats": {
    "suites": 9,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-29T04:31:14.545Z",
    "end": "2023-03-29T04:31:14.687Z",
    "duration": 142,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d62a63c5-3ae7-4eec-b234-df15e00f6a8c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06cbcab5-8b15-4a44-821e-d470a59964ef",
          "title": "Order",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\order-test.js",
          "file": "\\src\\models\\test\\order-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have model",
              "fullTitle": "Order should have model",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Order).to.exist;",
              "err": {},
              "uuid": "db0ee810-0967-4233-a3da-c50be2883713",
              "parentUUID": "06cbcab5-8b15-4a44-821e-d470a59964ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db0ee810-0967-4233-a3da-c50be2883713"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eae1fee3-8556-409e-933a-a6db64a33dc8",
          "title": "Order Schema",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\order-test.js",
          "file": "\\src\\models\\test\\order-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Order Schema should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(order_schema).to.exist;",
              "err": {},
              "uuid": "26a09396-7447-42f4-bb35-d61da7866970",
              "parentUUID": "eae1fee3-8556-409e-933a-a6db64a33dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a user id key",
              "fullTitle": "Order Schema should have a user id key",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(order_schema.obj)\n.which.is.an('object')\n.and.has.property('user_id')",
              "err": {},
              "uuid": "54b62cb8-920b-4bac-af24-aa9c99ae5fe0",
              "parentUUID": "eae1fee3-8556-409e-933a-a6db64a33dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have an order status key",
              "fullTitle": "Order Schema should have an order status key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(order_schema.obj)\n.which.is.an('object')\n.and.has.property('order_status')",
              "err": {},
              "uuid": "ba7a76af-f5d2-42a6-9401-21372c0a39ca",
              "parentUUID": "eae1fee3-8556-409e-933a-a6db64a33dc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26a09396-7447-42f4-bb35-d61da7866970",
            "54b62cb8-920b-4bac-af24-aa9c99ae5fe0",
            "ba7a76af-f5d2-42a6-9401-21372c0a39ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ea0d718d-b937-422a-bbba-d329fe768084",
          "title": "Product Ordered",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product_ordered-test.js",
          "file": "\\src\\models\\test\\product_ordered-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have a model",
              "fullTitle": "Product Ordered should have a model",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Product_Ordered).to.exist;",
              "err": {},
              "uuid": "52d8b428-2a9d-45d5-ab81-41bd47ed4a9a",
              "parentUUID": "ea0d718d-b937-422a-bbba-d329fe768084",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52d8b428-2a9d-45d5-ab81-41bd47ed4a9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dc8277b5-74a6-4df2-94a8-18cd63e86431",
          "title": "Product Ordered Schema",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product_ordered-test.js",
          "file": "\\src\\models\\test\\product_ordered-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Product Ordered Schema should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema).to.exist;",
              "err": {},
              "uuid": "64ab2559-9414-4688-93db-40aae1db34ef",
              "parentUUID": "dc8277b5-74a6-4df2-94a8-18cd63e86431",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a quantity key",
              "fullTitle": "Product Ordered Schema should have a quantity key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema.obj)\n.which.is.an('object')\n.and.has.property('quantity');",
              "err": {},
              "uuid": "44da5e35-ffa4-463f-97d0-3395c45d3437",
              "parentUUID": "dc8277b5-74a6-4df2-94a8-18cd63e86431",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a product id key",
              "fullTitle": "Product Ordered Schema should have a product id key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema.obj)\n.which.is.an('object')\n.and.has.property('product_id');",
              "err": {},
              "uuid": "6ed94c1f-ca0a-43a4-a2d2-cd3398f239ef",
              "parentUUID": "dc8277b5-74a6-4df2-94a8-18cd63e86431",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have an order id key",
              "fullTitle": "Product Ordered Schema should have an order id key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_ordered_schema.obj)\n.which.is.an('object')\n.and.has.property('order_id');",
              "err": {},
              "uuid": "6ec8f644-8be1-4dfc-89b9-1571234e0af5",
              "parentUUID": "dc8277b5-74a6-4df2-94a8-18cd63e86431",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64ab2559-9414-4688-93db-40aae1db34ef",
            "44da5e35-ffa4-463f-97d0-3395c45d3437",
            "6ed94c1f-ca0a-43a4-a2d2-cd3398f239ef",
            "6ec8f644-8be1-4dfc-89b9-1571234e0af5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c4425f0-75c9-4557-a64a-78ab600878c9",
          "title": "Product Model",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product-test.js",
          "file": "\\src\\models\\test\\product-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have a product model",
              "fullTitle": "Product Model should have a product model",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Product).to.exist;",
              "err": {},
              "uuid": "f6ac1212-06ad-4605-92b5-1c6164ae6a16",
              "parentUUID": "0c4425f0-75c9-4557-a64a-78ab600878c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6ac1212-06ad-4605-92b5-1c6164ae6a16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c351395c-2e3f-4616-9831-6e3c9be58823",
          "title": "Product Schema",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\src\\models\\test\\product-test.js",
          "file": "\\src\\models\\test\\product-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Product Schema should be defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema).to.exist;;",
              "err": {},
              "uuid": "53705752-117f-4d2e-b797-63ffa9baa6fd",
              "parentUUID": "c351395c-2e3f-4616-9831-6e3c9be58823",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a title key",
              "fullTitle": "Product Schema should have a title key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema.obj)\n.which.is.an('object')\n.and.has.property('title');",
              "err": {},
              "uuid": "278b1343-c50d-4997-84c2-98f56826db74",
              "parentUUID": "c351395c-2e3f-4616-9831-6e3c9be58823",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a description key",
              "fullTitle": "Product Schema should have a description key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema.obj)\n.which.is.an('object')\n.and.has.property('description');",
              "err": {},
              "uuid": "b666494f-9cc9-4e32-b66f-9f18e76e4ea5",
              "parentUUID": "c351395c-2e3f-4616-9831-6e3c9be58823",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a price key",
              "fullTitle": "Product Schema should have a price key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(product_schema.obj)\n.which.is.an('object')\n.and.has.property('price');",
              "err": {},
              "uuid": "9b89b2b5-6355-4256-a5c3-cb2c8e09b3e3",
              "parentUUID": "c351395c-2e3f-4616-9831-6e3c9be58823",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53705752-117f-4d2e-b797-63ffa9baa6fd",
            "278b1343-c50d-4997-84c2-98f56826db74",
            "b666494f-9cc9-4e32-b66f-9f18e76e4ea5",
            "9b89b2b5-6355-4256-a5c3-cb2c8e09b3e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "df015745-6ddc-402b-8ae6-8bb7da3da9e6",
          "title": "Mongoose",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\server-test.js",
          "file": "\\test\\server-test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: create connection in \"Mongoose\"",
              "fullTitle": "Mongoose \"before all\" hook: create connection in \"Mongoose\"",
              "timedOut": false,
              "duration": 16,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "conn_dev  = await mongoose.createConnection(mongo_test_uri).asPromise();\nconn_test = await mongoose.createConnection(mongo_dev_uri).asPromise();\nassert.rejects(async () => {\n    conn_invalid = await mongoose.createConnection(mongo_invalid_uri).asPromise();\n}, (err) => err === 'Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\"');\nreturn;",
              "err": {},
              "uuid": "30d4cdb5-317a-4824-b630-cb6722445763",
              "parentUUID": "df015745-6ddc-402b-8ae6-8bb7da3da9e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "shouldnt connect to DB with incorrect prefix",
              "fullTitle": "Mongoose shouldnt connect to DB with incorrect prefix",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let conn_invalid = mongoose.createConnection(mongo_invalid_uri);\nconst ready = conn_invalid.readyState;\nassert.equal(ready, 0);\ndone();",
              "err": {},
              "uuid": "58930837-057b-4fea-8836-282e4ea43cea",
              "parentUUID": "df015745-6ddc-402b-8ae6-8bb7da3da9e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should connect to Spec Test DB",
              "fullTitle": "Mongoose should connect to Spec Test DB",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ready = conn_test.readyState;\n\nassert.equal(ready, 1);\ndone();",
              "err": {},
              "uuid": "352c83c6-7318-42d1-8d87-82274d937458",
              "parentUUID": "df015745-6ddc-402b-8ae6-8bb7da3da9e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should connect to Dev DB",
              "fullTitle": "Mongoose should connect to Dev DB",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ready = conn_dev.readyState;\n\nassert.equal(ready, 1);\ndone();",
              "err": {},
              "uuid": "b8f50b3b-41ee-4b69-bb5e-3e0dd7d4ed2a",
              "parentUUID": "df015745-6ddc-402b-8ae6-8bb7da3da9e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58930837-057b-4fea-8836-282e4ea43cea",
            "352c83c6-7318-42d1-8d87-82274d937458",
            "b8f50b3b-41ee-4b69-bb5e-3e0dd7d4ed2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4082883-e139-446f-a16d-198e570864e5",
          "title": "Port Definition",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\server-test.js",
          "file": "\\test\\server-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be defined",
              "fullTitle": "Port Definition should be defined",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(port).to.exist;\ndone();",
              "err": {},
              "uuid": "c01ccb48-8521-4807-8d88-b7d84dc62682",
              "parentUUID": "a4082883-e139-446f-a16d-198e570864e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c01ccb48-8521-4807-8d88-b7d84dc62682"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2acf461a-748b-4d72-906f-da16c32af0c1",
          "title": "Express",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\server-test.js",
          "file": "\\test\\server-test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Express\"",
              "fullTitle": "Express \"before all\" hook in \"Express\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();\nserver.listen(port, () => {\n    console.log(`spec test server should open on port ${port}`);\n    done();\n});",
              "err": {},
              "uuid": "3e562aef-2f8e-4d6a-8c38-24018f00a26e",
              "parentUUID": "2acf461a-748b-4d72-906f-da16c32af0c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Express\"",
              "fullTitle": "Express \"after all\" hook in \"Express\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();\nconsole.log(`spec test server should close on port ${port}`);",
              "err": {},
              "uuid": "b319f2c0-c799-4088-a7ff-fa593bd772b1",
              "parentUUID": "2acf461a-748b-4d72-906f-da16c32af0c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "spec test server should connect with status 200",
              "fullTitle": "Express spec test server should connect with status 200",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return await request.get('/', (req, res) => {\n    expect(res.status).to.equal(200);\n});",
              "err": {},
              "uuid": "656052a8-fa8d-4aaf-a7ed-7a716999c8aa",
              "parentUUID": "2acf461a-748b-4d72-906f-da16c32af0c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "656052a8-fa8d-4aaf-a7ed-7a716999c8aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}
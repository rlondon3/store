{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-24T06:37:18.801Z",
    "end": "2023-03-24T06:37:18.869Z",
    "duration": 68,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6ea036ea-7cc2-4a73-a7c4-e18db361aeb5",
      "title": "",
      "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\test.js",
      "file": "\\test\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f55e0f00-019a-45ad-bb23-944f7611d803",
          "title": "Mongoose",
          "fullFile": "C:\\Users\\rlond\\Desktop\\Code\\store\\backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: create connection in \"Mongoose\"",
              "fullTitle": "Mongoose \"before all\" hook: create connection in \"Mongoose\"",
              "timedOut": false,
              "duration": 52,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "conn_dev  = await mongoose.createConnection(mongo_test_uri).asPromise();\nconn_test = await mongoose.createConnection(mongo_dev_uri).asPromise();\nreturn;",
              "err": {},
              "uuid": "12b16217-662b-4f56-ae81-f6cbd269cf7f",
              "parentUUID": "f55e0f00-019a-45ad-bb23-944f7611d803",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "shouldnt connect to DB with incorrect prefix",
              "fullTitle": "Mongoose shouldnt connect to DB with incorrect prefix",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.rejects(async () => {\n    conn_invalid = await mongoose.createConnection(mongo_invalid_uri).asPromise();\n  }, (err) => err === 'Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\"');",
              "err": {},
              "uuid": "8229ab89-6813-41ef-80ab-15b2692ae1ec",
              "parentUUID": "f55e0f00-019a-45ad-bb23-944f7611d803",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should connect to Spec Test DB",
              "fullTitle": "Mongoose should connect to Spec Test DB",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ready = conn_test.readyState;\n\nassert.equal(ready, 1);\ndone();",
              "err": {},
              "uuid": "5486e71e-ca8e-4978-9e34-a46f95749ed6",
              "parentUUID": "f55e0f00-019a-45ad-bb23-944f7611d803",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should connect to Dev DB",
              "fullTitle": "Mongoose should connect to Dev DB",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ready = conn_dev.readyState;\n\nassert.equal(ready, 1);\ndone();",
              "err": {},
              "uuid": "1beee118-a1f4-4dcf-a492-de1658ebf758",
              "parentUUID": "f55e0f00-019a-45ad-bb23-944f7611d803",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8229ab89-6813-41ef-80ab-15b2692ae1ec",
            "5486e71e-ca8e-4978-9e34-a46f95749ed6",
            "1beee118-a1f4-4dcf-a492-de1658ebf758"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}